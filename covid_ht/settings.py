"""
Django settings for covid_ht project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import django_heroku
import os

from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'DonTLoOkaTMeIMSeCrEt-rEsPeCt-OtHeRs-PrIvaCY!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("COVIDHT_DEBUG", False)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #
    'materializecssform',
    'rest_framework',
    'rest_framework.authtoken',
    'django_ai',
    'django_ai.ai_base',
    'django_ai.supervised_learning',
    #
    'base',
    'units',
    'data',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'covid_ht.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'covid_ht.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# Custom User Model
AUTH_USER_MODEL = "base.User"

LOGIN_REDIRECT_URL = '/units/current/'
LOGOUT_REDIRECT_URL = '/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ]
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = None

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# -> covid-ht specifics

# CHTUID: Covid-HT instance Unique IDentinfier is 5 case-sensitive alphanumeric
# code that uniquely identifies an instance and the data originated in it.
# It is important for the correct network functioning that this code is
# kept unique among all the instances.
CHTUID = os.environ.get("CHTUID", "cHT00")

# Enable to include CHTUID in the Learning Fields of the Classifier
CHTUID_USE_IN_CLASSIFICATION = True

# Example Data V2
# Disable this if you don't want example data (obsevations, users and units)
# generated by migrations and the message at the classifying page
EXAMPLE_DATA_V2 = os.environ.get("COVIDHT_EXAMPLE_DATA_V2", True)
EXAMPLE_DATA_SIZE = int(os.environ.get("COVIDHT_EXAMPLE_DATA_SIZE", 1000))

CLINICAL_FIELDS_MIN_NUM_SUBMIT = 6

DATA_PRIVACY_MODE = True

# Fields to be used Data Input forms
# (comment out according to equipments' output)
DATA_INPUT_FORM_FIELDS = [
    'age',
    'sex',
    'is_diabetic',
    'is_hypertense',
    'is_overweight',
    'is_at_altitude',
    'is_with_other_conds',
    'rbc',
    'hgb',
    'hgb_UmmolL',
    'hgbp',
    'hgbp_UumolL',
    'hgbg',
    'htg',
    'hct',
    'mcv',
    'mch',
    'mch_Ufmolcell',
    'mchc',
    'mchc_UgdL',
    'mchc_UmmolL',
    'rdw',
    'rtc',
    'rtc_Upercentage_Rrbc',
    'plt',
    'mpv',
    'pt',
    'inr',
    'aptt',
    'tct',
    'fbg',
    'atb',
    'atb_UmgmL',
    'bt',
    'vsy',
    'wbc',
    'neut',
    'neut_Upercentage_Rwbc',
    'nbf',
    'nbf_Upercentage_Rwbc',
    'lymp',
    'lymp_Upercentage_Rwbc',
    'mono',
    'mono_Upercentage_Rwbc',
    'mnl',
    'mnl_Upercentage_Rwbc',
    'eo',
    'eo_Upercentage_Rwbc',
    'baso',
    'baso_Upercentage_Rwbc',
    'cd4',
    'iga',
    'igd',
    'ige',
    'igg',
    'igm',
    'esr',
    'crp',
    'crp_UnmolL',
    'aat',
    'aat_UumolL',
    'pct'
]

# Fields to be used Data Classification forms
# (use "__all__" for all fields, DATA_INPUT_FORM_FIELDS to match
# Data Input or provide a list with the desired fields)
DATA_CLASSIFICATION_FORM_FIELDS = "__all__"

# Graphing
GRAPHING = os.environ.get("COVIDHT_GRAPHING", True)
GRAPHING_FIELDS = ["rbc", "wbc", "plt", "lymp", "neut"]
GRAPHING_DATASET = os.environ.get(
    "COVIDHT_GRAPHING_DATASET", True)
GRAPHING_COND_DEC_FUNCTION = os.environ.get(
    "COVIDHT_GRAPHING_COND_DEC_FUNCTION", True)
GRAPHING_MESH_STEPS = \
    int(os.environ.get("COVIDHT_GRAPHING_MESH_STEPS", 200))

django_heroku.settings(locals(), test_runner=False)
